// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/kubernetes-helm
{
	"name": "JMeter + Dynatrace Demo Environment",
	"image": "ubuntu:noble",

	// Enable docker in docker support
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2.12.2": {}
	},

	"hostRequirements": {
		"cpus": 2
	},

	// Use 'postCreateCommand' to run commands after the container is created.
	//"postCreateCommand": "pip install -r /workspaces/$RepositoryName/.devcontainer/requirements.txt --break-system-packages && python3 /workspaces/$RepositoryName/environment_installer.py",
	"postCreateCommand": ".devcontainer/post-create.sh && pip install -r .devcontainer/requirements.txt --break-system-packages && python3 environment_installer.py",

	// containerEnv and secrets are equivalent
	// containerEnv is used when running devcontainer locally
	// eg.
	// set DT_ENVIRONMENT_ID=abc12345
	// devcontainer up && devcontainer open
	// "secrets" is used by GitHub to present the user a UI form they complete
	// In short, both blocks should stay in sync
	"containerEnv": {
		"RepositoryName": "obslab-jmeter",
		"DT_ENVIRONMENT_ID": "${localEnv:DT_ENVIRONMENT_ID}",
		"DT_ENVIRONMENT_TYPE": "${localEnv:DT_ENVIRONMENT_TYPE}",
		"DT_API_TOKEN": "${localEnv:DT_API_TOKEN}"
	},

	"secrets": {
	 	  "DT_ENVIRONMENT_ID": {
	            "description": "eg. abc12345 from https://abc12345.live.dynatrace.com"
		},
		  "DT_ENVIRONMENT_TYPE": {
			"description": "eg. live, sprint or dev. If unsure, use live."
		},
		  "DT_API_TOKEN": {
	    	    "description": "Dynatrace API token with these permissions: `openpipeline.events_sdlc`"
		}
	}
}